{"version":3,"sources":["store/actions/places.ts","store/actions/search.ts","components/Header/Header.tsx","components/Map/AddMarker.tsx","Constants.ts","data.ts","components/Map/Map.tsx","components/Search/Search.tsx","components/Preview/Preview.tsx","components/Form/Form.tsx","App.tsx","reportWebVitals.ts","store/reducers/places.ts","store/reducers/search.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["SET_ALL_PLACES","SET_SELECTED_PLACE","SET_PLACE_PREVIEW_VISIBILITY","SET_PLACE_FORM_VISIBILITY","SET_PRE_PLACE_LOCATION","ADD_NEW_PLACE","setSelectedPlace","place","type","payload","setPlacePreviewVisibility","show","setPlaceFormVisibility","SET_SEARCH_VISIBILITY","setSearchVisibility","connect","state","search","dispatch","searchIsVisible","className","style","fontSize","verticalAlign","position","left","top","onClick","formIsOpen","places","placeFormIsVisible","toggleForm","setLocation","setPrePlaceLocation","useState","setPosition","useMapEvents","click","e","latlng","Marker","L","icon","iconSize","iconAnchor","popupAnchor","iconUrl","shadowUrl","dbRef","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ref","getDatabase","a","placeArr","get","child","then","snapshot","exists","forEach","latlngexp","val","LatLng","lat","lng","date","location","description","console","log","push","catch","error","returnArray","isVisible","placePreviewsIsVisible","selectedPlace","togglePreview","setPlaceForPreview","setAllPlacesAgain","defaultPosition","LocationMarker","map","useMap","useEffect","locate","on","flyTo","getZoom","Popup","data","res","showPlace","MapContainer","center","zoom","scrollWheelZoom","height","zoomControl","TileLayer","url","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","eventHandlers","setTimeout","showPreview","Tooltip","ZoomControl","zoomInText","zoomOutText","closeSearch","role","background","closePreview","prePlacePosition","closeForm","addNewPlace","initialValues","validate","values","Object","keys","reduce","prev","curr","onSubmit","Date","now","toString","db","set","writeMapData","errors","touched","isValidating","htmlFor","name","placeholder","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","productsReducer","action","searchReducer","combineReducers","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.b54bedc1.chunk.js","sourcesContent":["import { LatLngExpression } from \"leaflet\";\r\nimport { Place } from \"../models\";\r\n\r\nexport const SET_ALL_PLACES = \"SET_ALL_PLACES\";\r\nexport const SET_SELECTED_PLACE = \"SET_SELECTED_PLACE\";\r\nexport const SET_PLACE_PREVIEW_VISIBILITY = \"SET_PLACE_PREVIEW_VISIBILITY\";\r\nexport const SET_PLACE_FORM_VISIBILITY = \"SET_PLACE_FORM_VISIBILITY\";\r\nexport const SET_PRE_PLACE_LOCATION = \"SET_PRE_PLACE_LOCATION\";\r\nexport const ADD_NEW_PLACE = \"ADD_NEW_PLACE\";\r\n\r\nexport const setAllPlaces = (places: Place[]) => ({\r\n  type: SET_ALL_PLACES,\r\n  payload: places,\r\n});\r\n\r\nexport const setSelectedPlace = (place: Place) => ({\r\n  type: SET_SELECTED_PLACE,\r\n  payload: place,\r\n});\r\n\r\nexport const setPlacePreviewVisibility = (show: boolean) => ({\r\n  type: SET_PLACE_PREVIEW_VISIBILITY,\r\n  payload: show,\r\n});\r\n\r\nexport const setPlaceFormVisibility = (show: boolean) => ({\r\n  type: SET_PLACE_FORM_VISIBILITY,\r\n  payload: show,\r\n});\r\n\r\nexport const setPrePlaceLocation = (payload: LatLngExpression) => ({\r\n  type: SET_PRE_PLACE_LOCATION,\r\n  payload,\r\n});\r\n\r\nexport const addNewPlace = (payload: Place) => ({\r\n  type: ADD_NEW_PLACE,\r\n  payload,\r\n});\r\n","export const SET_SEARCH_VISIBILITY = \"SET_SEARCH_VISIBILITY\";\r\n\r\nexport const setSearchVisibility = (show: boolean) => ({\r\n  type: SET_SEARCH_VISIBILITY,\r\n  payload: show,\r\n});\r\n","import { connect } from \"react-redux\";\r\nimport { setSearchVisibility } from \"../../store/actions\";\r\nimport { IState } from \"../../store/models\";\r\nimport \"./Header.css\";\r\nimport { CgPlayListSearch } from \"react-icons/cg\";\r\n\r\nconst Header = ({ searchIsVisible, setSearchVisibility }: any) => {\r\n\r\n  return (\r\n    <div className=\"header__container\">\r\n      <CgPlayListSearch\r\n        style={{\r\n          fontSize: \"3rem\",\r\n          verticalAlign: \"middle\",\r\n          position: \"absolute\",\r\n          left: \"1rem\",\r\n          top: \"10px\",\r\n        }}\r\n        onClick={() => setSearchVisibility(!searchIsVisible)}\r\n      ></CgPlayListSearch>\r\n      <span>Where are the Green Parrots?</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  const { search } = state;\r\n  return search;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    setSearchVisibility: (payload: boolean) =>\r\n      dispatch(setSearchVisibility(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useState } from \"react\";\r\nimport { LatLng, LatLngExpression } from \"leaflet\";\r\nimport { Marker, useMapEvents } from \"react-leaflet\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setPlaceFormVisibility,\r\n  setPrePlaceLocation,\r\n} from \"../../store/actions\";\r\nimport { IState } from \"../../store/models\";\r\n\r\nconst AddMarker = ({ formIsOpen, toggleForm, setLocation }: any) => {\r\n  const [position, setPosition] = useState(\r\n    (null as unknown) as LatLngExpression\r\n  );\r\n\r\n  useMapEvents({\r\n    click: (e) => {\r\n      setPosition(e.latlng);\r\n      setLocation(e.latlng);\r\n      toggleForm(true);\r\n    },\r\n  });\r\n\r\n  return !formIsOpen || position === null ? null : (\r\n    <Marker position={position}></Marker>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  const { places } = state;\r\n\r\n  return {\r\n    formIsOpen: places.placeFormIsVisible,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    toggleForm: (payload: boolean) => dispatch(setPlaceFormVisibility(payload)),\r\n    setLocation: (payload: LatLng) => dispatch(setPrePlaceLocation(payload)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMarker);\r\n","import L from \"leaflet\";\r\n\r\nexport default L.icon({\r\n  iconSize: [25, 41],\r\n  iconAnchor: [10, 41],\r\n  popupAnchor: [2, -40],\r\n  iconUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-icon.png\",\r\n  shadowUrl: \"https://unpkg.com/leaflet@1.6/dist/images/marker-shadow.png\"\r\n});\r\n\r\nexport const mapboxAPI: string = \"pk.eyJ1IjoidWx6aGFuZyIsImEiOiJja3R5eHZxMTMwMnl3MnhxZ2JyYzYzcmpzIn0.nw7l6ZxMbKNsVzy1mjMNJQ\";\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyDafTBcwBZ9g7nnzvQYW1m644ZV_sRTvJQ\",\r\n  authDomain: \"bird-maps-1.firebaseapp.com\",\r\n  databaseURL: \"https://bird-maps-1-default-rtdb.firebaseio.com\",\r\n  projectId: \"bird-maps-1\",\r\n  storageBucket: \"bird-maps-1.appspot.com\",\r\n  messagingSenderId: \"460361909334\",\r\n  appId: \"1:460361909334:web:9e8db450c35df6e9bda7f7\",\r\n  measurementId: \"G-K6PPGQL6T2\"\r\n};","import { Place } from \"./store/models\";\r\nimport { getDatabase, ref, child, get } from \"firebase/database\";\r\nimport { LatLngExpression } from \"leaflet\";\r\nimport { initializeApp } from \"firebase/app\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDafTBcwBZ9g7nnzvQYW1m644ZV_sRTvJQ\",\r\n  authDomain: \"bird-maps-1.firebaseapp.com\",\r\n  databaseURL: \"https://bird-maps-1-default-rtdb.firebaseio.com\",\r\n  projectId: \"bird-maps-1\",\r\n  storageBucket: \"bird-maps-1.appspot.com\",\r\n  messagingSenderId: \"460361909334\",\r\n  appId: \"1:460361909334:web:9e8db450c35df6e9bda7f7\",\r\n  measurementId: \"G-K6PPGQL6T2\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst dbRef = ref(getDatabase());\r\n\r\nexport async function data():Promise<Place[]> {\r\n// export const data: Observable<Place[]> = () => {\r\n  let placeArr: Place[] = []\r\n  await get(child(dbRef, `sighting`)).then((snapshot) => {\r\n    if (snapshot.exists()) {\r\n\r\n        snapshot.forEach(function(child) {\r\n          const latlngexp: LatLngExpression = [child.val().LatLng.lat, child.val().LatLng.lng]\r\n          const place = {\r\n            date: child.val().date,\r\n            position: latlngexp,\r\n            location: child.val().location,\r\n            description: child.val().description\r\n          }\r\n          console.log(place)\r\n          placeArr.push(place)\r\n      })\r\n\r\n\r\n    } else {\r\n      console.log(\"No data available\");\r\n    }\r\n\r\n  }).catch((error) => {\r\n    console.error(error);\r\n  });\r\n\r\n  const returnArray: Place[] = [\r\n    { date:\"0\",\r\n      description:\"Mueller Lake Park\",\r\n      location:\"Mueller Lake Park\",\r\n      position:[30.296837121677424,-97.70583834525243]\r\n    },\r\n    { date:\"0\",\r\n      description:\"Zilker Park\",\r\n      location:\"Zilker Park\",\r\n      position:[30.266467999637396,-97.76770124360763]\r\n    },\r\n    { date:\"0\",\r\n      description:\"Texas State Cemetery\",\r\n      location:\"Texas State Cemetery\",\r\n      position:[30.26612885415308,-97.72629372733968]\r\n    },\r\n    { date:\"0\",\r\n      description:\"Austin Animal Center\",\r\n      location:\"Austin Animal Center\",\r\n      position:[30.25236767828445,-97.68987941448056]\r\n    },\r\n    { date:\"0\",\r\n      description:\"IM Fields\",\r\n      location:\"IM Fields\",\r\n      position:[30.315221598446712,-97.72947554456864]\r\n    },\r\n    ...placeArr];\r\n    return returnArray;\r\n}\r\n\r\n\r\n// export const data: Place[] = getFirebase;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { LatLngExpression } from \"leaflet\";\r\nimport { MapContainer, TileLayer, Marker, Tooltip, Polyline, useMap, Popup, ZoomControl } from \"react-leaflet\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAllPlaces, setPlacePreviewVisibility, setSelectedPlace } from \"../../store/actions\";\r\nimport { IState, Place } from \"../../store/models\";\r\nimport AddMarker from \"./AddMarker\";\r\nimport { mapboxAPI } from \"../../Constants\"\r\nimport icon from \"../../Constants\";\r\nimport L from \"leaflet\";\r\nimport { data } from \"../../data\";\r\n\r\n\r\nimport \"./Map.css\";\r\n\r\nconst Map = ({\r\n  isVisible,\r\n  setAllPlacesAgain,\r\n  places,\r\n  selectedPlace,\r\n  togglePreview,\r\n  setPlaceForPreview,\r\n}: any) => {\r\n  const defaultPosition: LatLngExpression = [30.2672, -97.7431]; // Austin position\r\n  const [polyLineProps, setPolyLineProps] = useState([]);\r\n\r\n  // useEffect(() => {\r\n  //   setPolyLineProps(places.reduce((prev: LatLngExpression[], curr: Place) => {\r\n  //     prev.push(curr.position);\r\n  //     return prev;\r\n  //   }, []))\r\n  // }, [places]);\r\n\r\n  \r\n  useEffect(() => {data().then((res) => setAllPlacesAgain(res))}, [])\r\n  console.log(places)\r\n\r\n  function LocationMarker() {\r\n    const [position, setPosition] = useState(defaultPosition);\r\n\r\n    const map = useMap();\r\n\r\n    useEffect(() => {\r\n      map.locate().on(\"locationfound\", function (e) {\r\n        setPosition(e.latlng);\r\n        map.flyTo(e.latlng, map.getZoom());\r\n        // const radius = e.accuracy;\r\n        // const circle = L.circle(e.latlng, radius);\r\n        // circle.addTo(map);\r\n      });\r\n    }, [map]);\r\n\r\n    return position === null ? null : (\r\n      <Marker position={position} icon={icon}>\r\n        <Popup>\r\n          You are here. <br />\r\n        </Popup>\r\n      </Marker>\r\n    );\r\n  }\r\n\r\n  const showPreview = (place: Place) => {\r\n    if (isVisible) {\r\n      togglePreview(false);\r\n      setPlaceForPreview(null);\r\n    }\r\n\r\n    if (selectedPlace?.location !== place.location) {\r\n      setTimeout(() => {\r\n        showPlace(place);\r\n      }, 400);\r\n    }\r\n  };\r\n\r\n  const showPlace = (place: Place) => {\r\n    setPlaceForPreview(place);\r\n    togglePreview(true);\r\n  };\r\n\r\n  console.log(\"Map initialized\")\r\n  places.map((place: Place) => (console.log(place)));\r\n\r\n  return (\r\n    <div className=\"map__container\">\r\n      <MapContainer\r\n        center={defaultPosition}\r\n        zoom={18}\r\n        scrollWheelZoom={true}\r\n        style={{ height: \"100vh\" }}\r\n        zoomControl={false}\r\n      >\r\n        <TileLayer\r\n          url='https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}'\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          maxZoom={18}\r\n          id='mapbox/streets-v11'\r\n          tileSize={512}\r\n          zoomOffset={-1}\r\n          accessToken={mapboxAPI}\r\n        />\r\n        {/* <Polyline positions={polyLineProps} /> */}\r\n        {places.map((place: Place) => (\r\n          <Marker\r\n            key={place.location}\r\n            position={place.position}\r\n            eventHandlers={{ click: () => showPreview(place) }}\r\n          >\r\n            <Tooltip>{place.location}</Tooltip>\r\n          </Marker>\r\n        ))}\r\n{/* \r\n          <Marker\r\n            key={'TEST ONLOAD MARKER PLACE'}\r\n            position={[30.4504404703548,-97.67994568908304]}\r\n          >\r\n            <Tooltip>{'TEST ONLOAD MARKER PLACE'}</Tooltip>\r\n          </Marker> */}\r\n\r\n        <AddMarker />\r\n        <ZoomControl position=\"topleft\" zoomInText=\"+\" zoomOutText=\"-\" />\r\n        <LocationMarker />\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  console.log(\"mapstatetoprops\")\r\n  const { places } = state;\r\n  return {\r\n    isVisible: places.placePreviewsIsVisible,\r\n    places: places.places,\r\n    selectedPlace: places.selectedPlace,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    togglePreview: (payload: boolean) =>\r\n      dispatch(setPlacePreviewVisibility(payload)),\r\n    setPlaceForPreview: (payload: Place) =>\r\n      dispatch(setSelectedPlace(payload)),\r\n    setAllPlacesAgain: (payload: Place[]) =>\r\n      dispatch(setAllPlaces(payload))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\r\n","import { connect } from \"react-redux\";\r\nimport { setSelectedPlace, setPlacePreviewVisibility, setSearchVisibility } from \"../../store/actions\";\r\nimport { IState, Place } from \"../../store/models\";\r\nimport {BiArrowBack} from \"react-icons/bi\"\r\nimport \"./Search.css\";\r\n\r\nconst Search = ({ searchIsVisible, places, closeSearch, setSelectedPlace }: any) => {\r\n  return (\r\n   \r\n    <div\r\n      className={`search__container search__container--${\r\n        searchIsVisible && \"active\"\r\n      }`}\r\n    >\r\n      <div className=\"search__header\">\r\n        <span className=\"search__header__close\" role=\"button\" onClick={() => closeSearch()}><BiArrowBack/></span>\r\n        <span className=\"search__header__title\">Search</span>\r\n      </div>\r\n      <div className=\"search__list\">\r\n        {places.map((place: Place) => (\r\n        <div key={place.location} className=\"search__list__item\" style={{background: '#00B140'}} onClick={() => setSelectedPlace(place) }>\r\n          {place.location}\r\n          {/* {place.date} */}\r\n        </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  const { search, places } = state;\r\n  return {searchIsVisible: search.searchIsVisible, places: places.places};\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    closeSearch: () =>\r\n      dispatch(setSearchVisibility(false)),\r\n\r\n    setSelectedPlace: (payload: Place) =>\r\n      {\r\n        dispatch(setSelectedPlace(payload));\r\n        dispatch(setPlacePreviewVisibility(true))\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import { connect } from \"react-redux\";\r\nimport { setPlacePreviewVisibility } from \"../../store/actions\";\r\nimport { IState } from \"../../store/models\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport \"./Preview.css\";\r\n\r\nconst Preview = ({ isVisible, place, closePreview }: any) => {\r\n  return (\r\n    <div\r\n      className={`preview__container preview__container--${\r\n        isVisible && place && \"active\"\r\n      }`}\r\n    >\r\n      <div className=\"preview__close\" onClick={() => closePreview()}>\r\n        <AiFillCloseCircle></AiFillCloseCircle>\r\n      </div>\r\n      {/* <div\r\n        className=\"preview__picture\"\r\n        style={{ background: '#00B140' }}\r\n      ></div> */}\r\n      <div className=\"preview__description__container\">\r\n        <h1>Location</h1>\r\n        <div className=\"preview__location\">{place?.location}</div>\r\n\r\n        <h1>Date</h1>\r\n        <div className=\"preview__date\">{place?.date}</div>\r\n\r\n        <h1>Description</h1>\r\n        <div className=\"preview__description\">{place?.description}</div>\r\n\r\n        <h1>Position</h1>\r\n        <div className=\"preview__latlng\">{place?.position}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  const { places } = state;\r\n  return { isVisible: places.placePreviewsIsVisible, place: places.selectedPlace };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    closePreview: () =>\r\n      dispatch(setPlacePreviewVisibility(false)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Preview);\r\n","import { connect } from \"react-redux\";\r\nimport { addNewPlace as addNewPlaceAction, setPlaceFormVisibility } from \"../../store/actions\";\r\nimport { IState, Place } from \"../../store/models\";\r\nimport { AiFillCloseCircle } from \"react-icons/ai\";\r\nimport \"./Form.css\";\r\nimport { Field, Formik, Form as FormikForm } from \"formik\";\r\nimport { LatLng } from \"leaflet\";\r\n\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from 'firebase/firestore/lite';\r\nimport { getDatabase, ref, set } from \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDafTBcwBZ9g7nnzvQYW1m644ZV_sRTvJQ\",\r\n  authDomain: \"bird-maps-1.firebaseapp.com\",\r\n  databaseURL: \"https://bird-maps-1-default-rtdb.firebaseio.com\",\r\n  projectId: \"bird-maps-1\",\r\n  storageBucket: \"bird-maps-1.appspot.com\",\r\n  messagingSenderId: \"460361909334\",\r\n  appId: \"1:460361909334:web:9e8db450c35df6e9bda7f7\",\r\n  measurementId: \"G-K6PPGQL6T2\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nfunction writeMapData(LatLng: LatLng, location: string, description: string, date: number) {\r\n  const db = getDatabase();\r\n  location = location ? location : 'test';\r\n  set(ref(db, 'sighting/' + date.toString() + '/'), {\r\n    date: new Date(date).toString(),\r\n    LatLng: LatLng,\r\n    location: location,\r\n    description: description\r\n  });\r\n  console.log(\"when: \" + date.toString() + \" where: \" + LatLng)\r\n}\r\n\r\nconst Form = ({\r\n  isVisible,\r\n  position,\r\n  closeForm,\r\n  addNewPlace\r\n}: {\r\n  isVisible: boolean;\r\n  position: LatLng;\r\n  closeForm: Function;\r\n  addNewPlace: Function;\r\n}) => {\r\n\r\n  const initialValues = {\r\n    location: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const validator = (values: PlaceFormProps) => {\r\n    const keys = Object.keys(values);\r\n\r\n    return keys.reduce((prev, curr) => {\r\n      if (!values[curr]) {\r\n        // return { ...prev, [curr]: \"required\" };\r\n        return { ...prev};\r\n      }\r\n      return prev;\r\n    }, {});\r\n  };\r\n\r\n  const handleOnSubmit = (values: PlaceFormProps) => {\r\n    const date = Date.now()\r\n    addNewPlace({\r\n      ...values,\r\n      position: [position.lat, position.lng],\r\n      date: new Date(date).toString()\r\n    });\r\n    writeMapData(position, values.location, values.description, date);\r\n    closeForm()\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`form__container form__container--${isVisible && \"active\"}`}\r\n    >\r\n      <div className=\"form__header\">\r\n        <span\r\n          className=\"form__header__close\"\r\n          role=\"button\"\r\n          onClick={() => closeForm()}\r\n        >\r\n          <AiFillCloseCircle />\r\n        </span>\r\n        <span className=\"form__header__title\">Add new Place</span>\r\n      </div>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={validator}\r\n        onSubmit={handleOnSubmit}\r\n      >\r\n        {({ errors, touched, isValidating }) => (\r\n          <FormikForm>\r\n\r\n            <div className=\"formGroup\">\r\n              <div className=\"formGroupInput\">\r\n                <label htmlFor=\"location\">Location</label>\r\n                <Field id=\"location\" name=\"location\" placeholder=\"Neighborhood?\" />\r\n              </div>\r\n              {errors.location && <div className=\"errors\">Required</div>}\r\n            </div>\r\n            <div className=\"formGroup\">\r\n              <div className=\"formGroupInput\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <Field\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  placeholder=\"General observation notes...\"\r\n                />\r\n              </div>\r\n              {errors.description && <div className=\"errors\">Required</div>}\r\n            </div>\r\n\r\n            <div className=\"button__container\">\r\n              <button className=\"form__button\" type=\"submit\">Submit</button>\r\n            </div>\r\n          </FormikForm>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: IState) => {\r\n  const { places } = state;\r\n  return {\r\n    isVisible: places.placeFormIsVisible,\r\n    position: places.prePlacePosition as LatLng,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => {\r\n  return {\r\n    closeForm: () =>\r\n      dispatch(setPlaceFormVisibility(false)),\r\n    addNewPlace: (place: Place) => {\r\n      dispatch(addNewPlaceAction(place))\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n\r\ninterface PlaceFormProps {\r\n  [key: string]: string;\r\n  location: string;\r\n  description: string;\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/Header/Header\";\r\nimport Map from \"./components/Map/Map\";\r\nimport Search from \"./components/Search/Search\";\r\nimport Preview from \"./components/Preview/Preview\";\r\nimport Form from \"./components/Form/Form\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <nav>\r\n        <Header />\r\n      </nav>\r\n      <main>\r\n        <Search /> \r\n        <Map />\r\n        <Preview />\r\n        <Form />\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n  SET_ALL_PLACES,\r\n  SET_SELECTED_PLACE,\r\n  SET_PLACE_PREVIEW_VISIBILITY,\r\n  SET_PLACE_FORM_VISIBILITY,\r\n  SET_PRE_PLACE_LOCATION,\r\n  ADD_NEW_PLACE,\r\n} from \"../actions\";\r\nimport { PlaceState } from \"../models\";\r\nimport { data } from \"../../data\";\r\nimport { LatLngExpression } from \"leaflet\";\r\n\r\nconst initialState: PlaceState = {\r\n  places: [],\r\n  selectedPlace: null,\r\n  placePreviewsIsVisible: false,\r\n  placeFormIsVisible: false,\r\n  prePlacePosition: (null as unknown) as LatLngExpression,\r\n};\r\n\r\nconst productsReducer = (\r\n  state: PlaceState = initialState,\r\n  action: { type: string; payload: any }\r\n): PlaceState => {\r\n  switch (action.type) {\r\n    case SET_ALL_PLACES: {\r\n      return { ...state, places: action.payload };\r\n    }\r\n    case SET_SELECTED_PLACE: {\r\n      return { ...state, selectedPlace: action.payload };\r\n    }\r\n    case SET_PLACE_PREVIEW_VISIBILITY: {\r\n      return { ...state, placePreviewsIsVisible: action.payload };\r\n    }\r\n    case SET_PLACE_FORM_VISIBILITY: {\r\n      return { ...state, placeFormIsVisible: action.payload };\r\n    }\r\n    case SET_PRE_PLACE_LOCATION: {\r\n      return { ...state, prePlacePosition: action.payload };\r\n    }\r\n    case ADD_NEW_PLACE: {\r\n      return { ...state, places: [...state.places, action.payload] };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default productsReducer;\r\n","import { SET_SEARCH_VISIBILITY } from \"../actions\";\r\nimport { SearchState } from \"../models\";\r\n\r\nconst initialState: SearchState = {\r\n  searchIsVisible: false,\r\n};\r\n\r\nconst searchReducer = (\r\n  state = initialState,\r\n  action: { type: string; payload: any }\r\n) => {\r\n  switch (action.type) {\r\n    case SET_SEARCH_VISIBILITY: {\r\n      return { ...state, searchIsVisible: action.payload };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default searchReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport places from \"./places\";\r\nimport search from \"./search\";\r\n\r\nexport default combineReducers({ places, search });\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  (window as any)?.__REDUX_DEVTOOLS_EXTENSION__ &&\r\n    (window as any)?.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}